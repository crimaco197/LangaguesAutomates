Terminals which are not used

   tTEXT
   tCDIV
   tSPAN
   tCSPAN
   tERROR


State 103 conflicts: 1 shift/reduce
State 159 conflicts: 4 shift/reduce, 1 reduce/reduce
State 170 conflicts: 1 shift/reduce, 1 reduce/reduce
State 171 conflicts: 1 shift/reduce, 1 reduce/reduce
State 172 conflicts: 1 shift/reduce, 1 reduce/reduce
State 173 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: main
    2        | fun
    3        | fun Program

    4 @1: /* empty */

    5 @2: /* empty */

    6 main: tINT @1 tMAIN @2 BodyMain tRBRACE

    7 @3: /* empty */

    8 fun: tVOID tID @3 Body

    9 @4: /* empty */

   10 @5: /* empty */

   11 fun: tINT tID @4 tLPAR args tRPAR @5 functionBodyReturn

   12 Body: tLPAR args tRPAR tLBRACE structure tRBRACE

   13 BodyMain: tLPAR args tRPAR tLBRACE structure
   14         | tLPAR args tRPAR tLBRACE structure returnStatement tRBRACE
   15         | tLPAR args tRPAR tLBRACE returnStatement tRBRACE

   16 functionBodyReturn: tLBRACE structure returnStatement tRBRACE
   17                   | tLBRACE returnStatement tRBRACE

   18 @6: /* empty */

   19 returnStatement: tRETURN @6 resultat tSEMI

   20 structure: context
   21          | context structure

   22 context: action

   23 action: declaration
   24       | print tSEMI
   25       | bucles
   26       | functionName tSEMI

   27 print: tPRINT tLPAR tSTRING tID tSTRING tRPAR
   28      | tPRINT tLPAR resultat tRPAR

   29 bucles: if
   30       | while

   31 while: tWHILE tLPAR condition tRPAR tLBRACE structure tRBRACE

   32 @7: /* empty */

   33 if: tIF tLPAR condition tRPAR @7 ifStructure

   34 ifStructure: tLBRACE structure tRBRACE
   35            | tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE
   36            | tLBRACE structure tRBRACE functionBodyReturn
   37            | tLBRACE structure tRBRACE tELSE tLBRACE functionBodyReturn tRBRACE
   38            | tLBRACE structure returnStatement tRBRACE
   39            | tLBRACE returnStatement tRBRACE

   40 condition: var
   41          | tNOT tID
   42          | var tAND condition
   43          | var tNOT condition
   44          | var tLE condition
   45          | var tGE condition
   46          | var tEQ condition
   47          | var tNE condition
   48          | var tGT condition
   49          | var tLT condition
   50          | var tOR condition
   51          | tLPAR condition tRPAR

   52 declaration1: tINT tID

   53 declaration3: tASSIGN var tSEMI
   54             | tASSIGN resultat tSEMI

   55 declaration: declaration1 tSEMI
   56            | declaration1 tCOMMA declaration tSEMI
   57            | declaration1 tASSIGN resultat tCOMMA declaration tSEMI
   58            | declaration1 tASSIGN resultat tSEMI

   59 @8: /* empty */

   60 declaration: tID @8 declaration3
   61            | tID tCOMMA declaration tSEMI
   62            | tID

   63 @9: /* empty */

   64 functionName: tID tLPAR @9 argsName tRPAR

   65 argsName: /* empty */
   66         | argListName

   67 argListName: tID
   68            | tNB
   69            | functionName
   70            | argListName tCOMMA argListName

   71 @10: /* empty */

   72 argListName: argListName tDIV @10 argListName

   73 @11: /* empty */

   74 argListName: argListName tMUL @11 argListName

   75 @12: /* empty */

   76 argListName: argListName @12 tSUB argListName

   77 @13: /* empty */

   78 argListName: argListName tADD @13 argListName

   79 resultat: var

   80 @14: /* empty */

   81 resultat: resultat @14 tMUL var

   82 @15: /* empty */

   83 resultat: resultat tDIV @15 var

   84 @16: /* empty */

   85 resultat: resultat @16 tADD var

   86 @17: /* empty */

   87 resultat: resultat tSUB @17 var

   88 var: tID
   89    | tNB
   90    | functionName

   91 args: /* empty */
   92     | argList

   93 argList: tVOID
   94        | tINT tID
   95        | argList tCOMMA tINT tID


Terminals, with rules where they appear

$end (0) 0
error (256)
tTEXT (258)
tID (259) 8 11 27 41 52 60 61 62 64 67 88 94 95
tSTRING (260) 27
tNB (261) 68 89
tVOID (262) 8 93
tINT (263) 6 11 52 94 95
tMAIN (264) 6
tCDIV (265)
tSPAN (266)
tCSPAN (267)
tIF (268) 33
tELSE (269) 35 37
tWHILE (270) 31
tSUB (271) 76 87
tADD (272) 78 85
tDIV (273) 72 83
tMUL (274) 74 81
tASSIGN (275) 53 54 57 58
tLT (276) 49
tGT (277) 48
tNE (278) 47
tEQ (279) 46
tGE (280) 45
tLE (281) 44
tAND (282) 42
tOR (283) 50
tNOT (284) 41 43
tLBRACE (285) 12 13 14 15 16 17 31 34 35 36 37 38 39
tRBRACE (286) 6 12 14 15 16 17 31 34 35 36 37 38 39
tLPAR (287) 11 12 13 14 15 27 28 31 33 51 64
tRPAR (288) 11 12 13 14 15 27 28 31 33 51 64
tSEMI (289) 19 24 26 53 54 55 56 57 58 61
tCOMMA (290) 56 57 61 70 95
tERROR (291)
tPRINT (292) 27 28
tRETURN (293) 19


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Program (40)
    on left: 1 2 3, on right: 0 3
main (41)
    on left: 6, on right: 1
@1 (42)
    on left: 4, on right: 6
@2 (43)
    on left: 5, on right: 6
fun (44)
    on left: 8 11, on right: 2 3
@3 (45)
    on left: 7, on right: 8
@4 (46)
    on left: 9, on right: 11
@5 (47)
    on left: 10, on right: 11
Body (48)
    on left: 12, on right: 8
BodyMain (49)
    on left: 13 14 15, on right: 6
functionBodyReturn (50)
    on left: 16 17, on right: 11 36 37
returnStatement (51)
    on left: 19, on right: 14 15 16 17 38 39
@6 (52)
    on left: 18, on right: 19
structure (53)
    on left: 20 21, on right: 12 13 14 16 21 31 34 35 36 37 38
context (54)
    on left: 22, on right: 20 21
action (55)
    on left: 23 24 25 26, on right: 22
print (56)
    on left: 27 28, on right: 24
bucles (57)
    on left: 29 30, on right: 25
while (58)
    on left: 31, on right: 30
if (59)
    on left: 33, on right: 29
@7 (60)
    on left: 32, on right: 33
ifStructure (61)
    on left: 34 35 36 37 38 39, on right: 33
condition (62)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51, on right: 31 33 42
    43 44 45 46 47 48 49 50 51
declaration1 (63)
    on left: 52, on right: 55 56 57 58
declaration3 (64)
    on left: 53 54, on right: 60
declaration (65)
    on left: 55 56 57 58 60 61 62, on right: 23 56 57 61
@8 (66)
    on left: 59, on right: 60
functionName (67)
    on left: 64, on right: 26 69 90
@9 (68)
    on left: 63, on right: 64
argsName (69)
    on left: 65 66, on right: 64
argListName (70)
    on left: 67 68 69 70 72 74 76 78, on right: 66 70 72 74 76 78
@10 (71)
    on left: 71, on right: 72
@11 (72)
    on left: 73, on right: 74
@12 (73)
    on left: 75, on right: 76
@13 (74)
    on left: 77, on right: 78
resultat (75)
    on left: 79 81 83 85 87, on right: 19 28 54 57 58 81 83 85 87
@14 (76)
    on left: 80, on right: 81
@15 (77)
    on left: 82, on right: 83
@16 (78)
    on left: 84, on right: 85
@17 (79)
    on left: 86, on right: 87
var (80)
    on left: 88 89 90, on right: 40 42 43 44 45 46 47 48 49 50 53 79
    81 83 85 87
args (81)
    on left: 91 92, on right: 11 12 13 14 15
argList (82)
    on left: 93 94 95, on right: 92 95


state 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    Program  go to state 3
    main     go to state 4
    fun      go to state 5


state 1

    8 fun: tVOID . tID @3 Body

    tID  shift, and go to state 6


state 2

    6 main: tINT . @1 tMAIN @2 BodyMain tRBRACE
   11 fun: tINT . tID @4 tLPAR args tRPAR @5 functionBodyReturn

    tID  shift, and go to state 7

    $default  reduce using rule 4 (@1)

    @1  go to state 8


state 3

    0 $accept: Program . $end

    $end  shift, and go to state 9


state 4

    1 Program: main .

    $default  reduce using rule 1 (Program)


state 5

    2 Program: fun .
    3        | fun . Program

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    $default  reduce using rule 2 (Program)

    Program  go to state 10
    main     go to state 4
    fun      go to state 5


state 6

    8 fun: tVOID tID . @3 Body

    $default  reduce using rule 7 (@3)

    @3  go to state 11


state 7

   11 fun: tINT tID . @4 tLPAR args tRPAR @5 functionBodyReturn

    $default  reduce using rule 9 (@4)

    @4  go to state 12


state 8

    6 main: tINT @1 . tMAIN @2 BodyMain tRBRACE

    tMAIN  shift, and go to state 13


state 9

    0 $accept: Program $end .

    $default  accept


state 10

    3 Program: fun Program .

    $default  reduce using rule 3 (Program)


state 11

    8 fun: tVOID tID @3 . Body

    tLPAR  shift, and go to state 14

    Body  go to state 15


state 12

   11 fun: tINT tID @4 . tLPAR args tRPAR @5 functionBodyReturn

    tLPAR  shift, and go to state 16


state 13

    6 main: tINT @1 tMAIN . @2 BodyMain tRBRACE

    $default  reduce using rule 5 (@2)

    @2  go to state 17


state 14

   12 Body: tLPAR . args tRPAR tLBRACE structure tRBRACE

    tVOID  shift, and go to state 18
    tINT   shift, and go to state 19

    $default  reduce using rule 91 (args)

    args     go to state 20
    argList  go to state 21


state 15

    8 fun: tVOID tID @3 Body .

    $default  reduce using rule 8 (fun)


state 16

   11 fun: tINT tID @4 tLPAR . args tRPAR @5 functionBodyReturn

    tVOID  shift, and go to state 18
    tINT   shift, and go to state 19

    $default  reduce using rule 91 (args)

    args     go to state 22
    argList  go to state 21


state 17

    6 main: tINT @1 tMAIN @2 . BodyMain tRBRACE

    tLPAR  shift, and go to state 23

    BodyMain  go to state 24


state 18

   93 argList: tVOID .

    $default  reduce using rule 93 (argList)


state 19

   94 argList: tINT . tID

    tID  shift, and go to state 25


state 20

   12 Body: tLPAR args . tRPAR tLBRACE structure tRBRACE

    tRPAR  shift, and go to state 26


state 21

   92 args: argList .
   95 argList: argList . tCOMMA tINT tID

    tCOMMA  shift, and go to state 27

    $default  reduce using rule 92 (args)


state 22

   11 fun: tINT tID @4 tLPAR args . tRPAR @5 functionBodyReturn

    tRPAR  shift, and go to state 28


state 23

   13 BodyMain: tLPAR . args tRPAR tLBRACE structure
   14         | tLPAR . args tRPAR tLBRACE structure returnStatement tRBRACE
   15         | tLPAR . args tRPAR tLBRACE returnStatement tRBRACE

    tVOID  shift, and go to state 18
    tINT   shift, and go to state 19

    $default  reduce using rule 91 (args)

    args     go to state 29
    argList  go to state 21


state 24

    6 main: tINT @1 tMAIN @2 BodyMain . tRBRACE

    tRBRACE  shift, and go to state 30


state 25

   94 argList: tINT tID .

    $default  reduce using rule 94 (argList)


state 26

   12 Body: tLPAR args tRPAR . tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 31


state 27

   95 argList: argList tCOMMA . tINT tID

    tINT  shift, and go to state 32


state 28

   11 fun: tINT tID @4 tLPAR args tRPAR . @5 functionBodyReturn

    $default  reduce using rule 10 (@5)

    @5  go to state 33


state 29

   13 BodyMain: tLPAR args . tRPAR tLBRACE structure
   14         | tLPAR args . tRPAR tLBRACE structure returnStatement tRBRACE
   15         | tLPAR args . tRPAR tLBRACE returnStatement tRBRACE

    tRPAR  shift, and go to state 34


state 30

    6 main: tINT @1 tMAIN @2 BodyMain tRBRACE .

    $default  reduce using rule 6 (main)


state 31

   12 Body: tLPAR args tRPAR tLBRACE . structure tRBRACE

    tID     shift, and go to state 35
    tINT    shift, and go to state 36
    tIF     shift, and go to state 37
    tWHILE  shift, and go to state 38
    tPRINT  shift, and go to state 39

    structure     go to state 40
    context       go to state 41
    action        go to state 42
    print         go to state 43
    bucles        go to state 44
    while         go to state 45
    if            go to state 46
    declaration1  go to state 47
    declaration   go to state 48
    functionName  go to state 49


state 32

   95 argList: argList tCOMMA tINT . tID

    tID  shift, and go to state 50


state 33

   11 fun: tINT tID @4 tLPAR args tRPAR @5 . functionBodyReturn

    tLBRACE  shift, and go to state 51

    functionBodyReturn  go to state 52


state 34

   13 BodyMain: tLPAR args tRPAR . tLBRACE structure
   14         | tLPAR args tRPAR . tLBRACE structure returnStatement tRBRACE
   15         | tLPAR args tRPAR . tLBRACE returnStatement tRBRACE

    tLBRACE  shift, and go to state 53


state 35

   60 declaration: tID . @8 declaration3
   61            | tID . tCOMMA declaration tSEMI
   62            | tID .
   64 functionName: tID . tLPAR @9 argsName tRPAR

    tLPAR   shift, and go to state 54
    tCOMMA  shift, and go to state 55

    tASSIGN   reduce using rule 59 (@8)
    $default  reduce using rule 62 (declaration)

    @8  go to state 56


state 36

   52 declaration1: tINT . tID

    tID  shift, and go to state 57


state 37

   33 if: tIF . tLPAR condition tRPAR @7 ifStructure

    tLPAR  shift, and go to state 58


state 38

   31 while: tWHILE . tLPAR condition tRPAR tLBRACE structure tRBRACE

    tLPAR  shift, and go to state 59


state 39

   27 print: tPRINT . tLPAR tSTRING tID tSTRING tRPAR
   28      | tPRINT . tLPAR resultat tRPAR

    tLPAR  shift, and go to state 60


state 40

   12 Body: tLPAR args tRPAR tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 61


state 41

   20 structure: context .
   21          | context . structure

    tID     shift, and go to state 35
    tINT    shift, and go to state 36
    tIF     shift, and go to state 37
    tWHILE  shift, and go to state 38
    tPRINT  shift, and go to state 39

    $default  reduce using rule 20 (structure)

    structure     go to state 62
    context       go to state 41
    action        go to state 42
    print         go to state 43
    bucles        go to state 44
    while         go to state 45
    if            go to state 46
    declaration1  go to state 47
    declaration   go to state 48
    functionName  go to state 49


state 42

   22 context: action .

    $default  reduce using rule 22 (context)


state 43

   24 action: print . tSEMI

    tSEMI  shift, and go to state 63


state 44

   25 action: bucles .

    $default  reduce using rule 25 (action)


state 45

   30 bucles: while .

    $default  reduce using rule 30 (bucles)


state 46

   29 bucles: if .

    $default  reduce using rule 29 (bucles)


state 47

   55 declaration: declaration1 . tSEMI
   56            | declaration1 . tCOMMA declaration tSEMI
   57            | declaration1 . tASSIGN resultat tCOMMA declaration tSEMI
   58            | declaration1 . tASSIGN resultat tSEMI

    tASSIGN  shift, and go to state 64
    tSEMI    shift, and go to state 65
    tCOMMA   shift, and go to state 66


state 48

   23 action: declaration .

    $default  reduce using rule 23 (action)


state 49

   26 action: functionName . tSEMI

    tSEMI  shift, and go to state 67


state 50

   95 argList: argList tCOMMA tINT tID .

    $default  reduce using rule 95 (argList)


state 51

   16 functionBodyReturn: tLBRACE . structure returnStatement tRBRACE
   17                   | tLBRACE . returnStatement tRBRACE

    tID      shift, and go to state 35
    tINT     shift, and go to state 36
    tIF      shift, and go to state 37
    tWHILE   shift, and go to state 38
    tPRINT   shift, and go to state 39
    tRETURN  shift, and go to state 68

    returnStatement  go to state 69
    structure        go to state 70
    context          go to state 41
    action           go to state 42
    print            go to state 43
    bucles           go to state 44
    while            go to state 45
    if               go to state 46
    declaration1     go to state 47
    declaration      go to state 48
    functionName     go to state 49


state 52

   11 fun: tINT tID @4 tLPAR args tRPAR @5 functionBodyReturn .

    $default  reduce using rule 11 (fun)


state 53

   13 BodyMain: tLPAR args tRPAR tLBRACE . structure
   14         | tLPAR args tRPAR tLBRACE . structure returnStatement tRBRACE
   15         | tLPAR args tRPAR tLBRACE . returnStatement tRBRACE

    tID      shift, and go to state 35
    tINT     shift, and go to state 36
    tIF      shift, and go to state 37
    tWHILE   shift, and go to state 38
    tPRINT   shift, and go to state 39
    tRETURN  shift, and go to state 68

    returnStatement  go to state 71
    structure        go to state 72
    context          go to state 41
    action           go to state 42
    print            go to state 43
    bucles           go to state 44
    while            go to state 45
    if               go to state 46
    declaration1     go to state 47
    declaration      go to state 48
    functionName     go to state 49


state 54

   64 functionName: tID tLPAR . @9 argsName tRPAR

    $default  reduce using rule 63 (@9)

    @9  go to state 73


state 55

   61 declaration: tID tCOMMA . declaration tSEMI

    tID   shift, and go to state 74
    tINT  shift, and go to state 36

    declaration1  go to state 47
    declaration   go to state 75


state 56

   60 declaration: tID @8 . declaration3

    tASSIGN  shift, and go to state 76

    declaration3  go to state 77


state 57

   52 declaration1: tINT tID .

    $default  reduce using rule 52 (declaration1)


state 58

   33 if: tIF tLPAR . condition tRPAR @7 ifStructure

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 82
    functionName  go to state 83
    var           go to state 84


state 59

   31 while: tWHILE tLPAR . condition tRPAR tLBRACE structure tRBRACE

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 85
    functionName  go to state 83
    var           go to state 84


state 60

   27 print: tPRINT tLPAR . tSTRING tID tSTRING tRPAR
   28      | tPRINT tLPAR . resultat tRPAR

    tID      shift, and go to state 78
    tSTRING  shift, and go to state 86
    tNB      shift, and go to state 79

    functionName  go to state 83
    resultat      go to state 87
    var           go to state 88


state 61

   12 Body: tLPAR args tRPAR tLBRACE structure tRBRACE .

    $default  reduce using rule 12 (Body)


state 62

   21 structure: context structure .

    $default  reduce using rule 21 (structure)


state 63

   24 action: print tSEMI .

    $default  reduce using rule 24 (action)


state 64

   57 declaration: declaration1 tASSIGN . resultat tCOMMA declaration tSEMI
   58            | declaration1 tASSIGN . resultat tSEMI

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    resultat      go to state 89
    var           go to state 88


state 65

   55 declaration: declaration1 tSEMI .

    $default  reduce using rule 55 (declaration)


state 66

   56 declaration: declaration1 tCOMMA . declaration tSEMI

    tID   shift, and go to state 74
    tINT  shift, and go to state 36

    declaration1  go to state 47
    declaration   go to state 90


state 67

   26 action: functionName tSEMI .

    $default  reduce using rule 26 (action)


state 68

   19 returnStatement: tRETURN . @6 resultat tSEMI

    $default  reduce using rule 18 (@6)

    @6  go to state 91


state 69

   17 functionBodyReturn: tLBRACE returnStatement . tRBRACE

    tRBRACE  shift, and go to state 92


state 70

   16 functionBodyReturn: tLBRACE structure . returnStatement tRBRACE

    tRETURN  shift, and go to state 68

    returnStatement  go to state 93


state 71

   15 BodyMain: tLPAR args tRPAR tLBRACE returnStatement . tRBRACE

    tRBRACE  shift, and go to state 94


state 72

   13 BodyMain: tLPAR args tRPAR tLBRACE structure .
   14         | tLPAR args tRPAR tLBRACE structure . returnStatement tRBRACE

    tRETURN  shift, and go to state 68

    $default  reduce using rule 13 (BodyMain)

    returnStatement  go to state 95


state 73

   64 functionName: tID tLPAR @9 . argsName tRPAR

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    $default  reduce using rule 65 (argsName)

    functionName  go to state 98
    argsName      go to state 99
    argListName   go to state 100


state 74

   60 declaration: tID . @8 declaration3
   61            | tID . tCOMMA declaration tSEMI
   62            | tID .

    tCOMMA  shift, and go to state 55

    tSEMI     reduce using rule 62 (declaration)
    $default  reduce using rule 59 (@8)

    @8  go to state 56


state 75

   61 declaration: tID tCOMMA declaration . tSEMI

    tSEMI  shift, and go to state 101


state 76

   53 declaration3: tASSIGN . var tSEMI
   54             | tASSIGN . resultat tSEMI

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    resultat      go to state 102
    var           go to state 103


state 77

   60 declaration: tID @8 declaration3 .

    $default  reduce using rule 60 (declaration)


state 78

   64 functionName: tID . tLPAR @9 argsName tRPAR
   88 var: tID .

    tLPAR  shift, and go to state 54

    $default  reduce using rule 88 (var)


state 79

   89 var: tNB .

    $default  reduce using rule 89 (var)


state 80

   41 condition: tNOT . tID

    tID  shift, and go to state 104


state 81

   51 condition: tLPAR . condition tRPAR

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 105
    functionName  go to state 83
    var           go to state 84


state 82

   33 if: tIF tLPAR condition . tRPAR @7 ifStructure

    tRPAR  shift, and go to state 106


state 83

   90 var: functionName .

    $default  reduce using rule 90 (var)


state 84

   40 condition: var .
   42          | var . tAND condition
   43          | var . tNOT condition
   44          | var . tLE condition
   45          | var . tGE condition
   46          | var . tEQ condition
   47          | var . tNE condition
   48          | var . tGT condition
   49          | var . tLT condition
   50          | var . tOR condition

    tLT   shift, and go to state 107
    tGT   shift, and go to state 108
    tNE   shift, and go to state 109
    tEQ   shift, and go to state 110
    tGE   shift, and go to state 111
    tLE   shift, and go to state 112
    tAND  shift, and go to state 113
    tOR   shift, and go to state 114
    tNOT  shift, and go to state 115

    $default  reduce using rule 40 (condition)


state 85

   31 while: tWHILE tLPAR condition . tRPAR tLBRACE structure tRBRACE

    tRPAR  shift, and go to state 116


state 86

   27 print: tPRINT tLPAR tSTRING . tID tSTRING tRPAR

    tID  shift, and go to state 117


state 87

   28 print: tPRINT tLPAR resultat . tRPAR
   81 resultat: resultat . @14 tMUL var
   83         | resultat . tDIV @15 var
   85         | resultat . @16 tADD var
   87         | resultat . tSUB @17 var

    tSUB   shift, and go to state 118
    tDIV   shift, and go to state 119
    tRPAR  shift, and go to state 120

    tADD      reduce using rule 84 (@16)
    $default  reduce using rule 80 (@14)

    @14  go to state 121
    @16  go to state 122


state 88

   79 resultat: var .

    $default  reduce using rule 79 (resultat)


state 89

   57 declaration: declaration1 tASSIGN resultat . tCOMMA declaration tSEMI
   58            | declaration1 tASSIGN resultat . tSEMI
   81 resultat: resultat . @14 tMUL var
   83         | resultat . tDIV @15 var
   85         | resultat . @16 tADD var
   87         | resultat . tSUB @17 var

    tSUB    shift, and go to state 118
    tDIV    shift, and go to state 119
    tSEMI   shift, and go to state 123
    tCOMMA  shift, and go to state 124

    tADD      reduce using rule 84 (@16)
    $default  reduce using rule 80 (@14)

    @14  go to state 121
    @16  go to state 122


state 90

   56 declaration: declaration1 tCOMMA declaration . tSEMI

    tSEMI  shift, and go to state 125


state 91

   19 returnStatement: tRETURN @6 . resultat tSEMI

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    resultat      go to state 126
    var           go to state 88


state 92

   17 functionBodyReturn: tLBRACE returnStatement tRBRACE .

    $default  reduce using rule 17 (functionBodyReturn)


state 93

   16 functionBodyReturn: tLBRACE structure returnStatement . tRBRACE

    tRBRACE  shift, and go to state 127


state 94

   15 BodyMain: tLPAR args tRPAR tLBRACE returnStatement tRBRACE .

    $default  reduce using rule 15 (BodyMain)


state 95

   14 BodyMain: tLPAR args tRPAR tLBRACE structure returnStatement . tRBRACE

    tRBRACE  shift, and go to state 128


state 96

   64 functionName: tID . tLPAR @9 argsName tRPAR
   67 argListName: tID .

    tLPAR  shift, and go to state 54

    $default  reduce using rule 67 (argListName)


state 97

   68 argListName: tNB .

    $default  reduce using rule 68 (argListName)


state 98

   69 argListName: functionName .

    $default  reduce using rule 69 (argListName)


state 99

   64 functionName: tID tLPAR @9 argsName . tRPAR

    tRPAR  shift, and go to state 129


state 100

   66 argsName: argListName .
   70 argListName: argListName . tCOMMA argListName
   72            | argListName . tDIV @10 argListName
   74            | argListName . tMUL @11 argListName
   76            | argListName . @12 tSUB argListName
   78            | argListName . tADD @13 argListName

    tADD    shift, and go to state 130
    tDIV    shift, and go to state 131
    tMUL    shift, and go to state 132
    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 75 (@12)
    $default  reduce using rule 66 (argsName)

    @12  go to state 134


state 101

   61 declaration: tID tCOMMA declaration tSEMI .

    $default  reduce using rule 61 (declaration)


state 102

   54 declaration3: tASSIGN resultat . tSEMI
   81 resultat: resultat . @14 tMUL var
   83         | resultat . tDIV @15 var
   85         | resultat . @16 tADD var
   87         | resultat . tSUB @17 var

    tSUB   shift, and go to state 118
    tDIV   shift, and go to state 119
    tSEMI  shift, and go to state 135

    tADD      reduce using rule 84 (@16)
    $default  reduce using rule 80 (@14)

    @14  go to state 121
    @16  go to state 122


state 103

   53 declaration3: tASSIGN var . tSEMI
   79 resultat: var .

    tSEMI  shift, and go to state 136

    tSEMI     [reduce using rule 79 (resultat)]
    $default  reduce using rule 79 (resultat)


state 104

   41 condition: tNOT tID .

    $default  reduce using rule 41 (condition)


state 105

   51 condition: tLPAR condition . tRPAR

    tRPAR  shift, and go to state 137


state 106

   33 if: tIF tLPAR condition tRPAR . @7 ifStructure

    $default  reduce using rule 32 (@7)

    @7  go to state 138


state 107

   49 condition: var tLT . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 139
    functionName  go to state 83
    var           go to state 84


state 108

   48 condition: var tGT . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 140
    functionName  go to state 83
    var           go to state 84


state 109

   47 condition: var tNE . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 141
    functionName  go to state 83
    var           go to state 84


state 110

   46 condition: var tEQ . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 142
    functionName  go to state 83
    var           go to state 84


state 111

   45 condition: var tGE . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 143
    functionName  go to state 83
    var           go to state 84


state 112

   44 condition: var tLE . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 144
    functionName  go to state 83
    var           go to state 84


state 113

   42 condition: var tAND . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 145
    functionName  go to state 83
    var           go to state 84


state 114

   50 condition: var tOR . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 146
    functionName  go to state 83
    var           go to state 84


state 115

   43 condition: var tNOT . condition

    tID    shift, and go to state 78
    tNB    shift, and go to state 79
    tNOT   shift, and go to state 80
    tLPAR  shift, and go to state 81

    condition     go to state 147
    functionName  go to state 83
    var           go to state 84


state 116

   31 while: tWHILE tLPAR condition tRPAR . tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 148


state 117

   27 print: tPRINT tLPAR tSTRING tID . tSTRING tRPAR

    tSTRING  shift, and go to state 149


state 118

   87 resultat: resultat tSUB . @17 var

    $default  reduce using rule 86 (@17)

    @17  go to state 150


state 119

   83 resultat: resultat tDIV . @15 var

    $default  reduce using rule 82 (@15)

    @15  go to state 151


state 120

   28 print: tPRINT tLPAR resultat tRPAR .

    $default  reduce using rule 28 (print)


state 121

   81 resultat: resultat @14 . tMUL var

    tMUL  shift, and go to state 152


state 122

   85 resultat: resultat @16 . tADD var

    tADD  shift, and go to state 153


state 123

   58 declaration: declaration1 tASSIGN resultat tSEMI .

    $default  reduce using rule 58 (declaration)


state 124

   57 declaration: declaration1 tASSIGN resultat tCOMMA . declaration tSEMI

    tID   shift, and go to state 74
    tINT  shift, and go to state 36

    declaration1  go to state 47
    declaration   go to state 154


state 125

   56 declaration: declaration1 tCOMMA declaration tSEMI .

    $default  reduce using rule 56 (declaration)


state 126

   19 returnStatement: tRETURN @6 resultat . tSEMI
   81 resultat: resultat . @14 tMUL var
   83         | resultat . tDIV @15 var
   85         | resultat . @16 tADD var
   87         | resultat . tSUB @17 var

    tSUB   shift, and go to state 118
    tDIV   shift, and go to state 119
    tSEMI  shift, and go to state 155

    tADD      reduce using rule 84 (@16)
    $default  reduce using rule 80 (@14)

    @14  go to state 121
    @16  go to state 122


state 127

   16 functionBodyReturn: tLBRACE structure returnStatement tRBRACE .

    $default  reduce using rule 16 (functionBodyReturn)


state 128

   14 BodyMain: tLPAR args tRPAR tLBRACE structure returnStatement tRBRACE .

    $default  reduce using rule 14 (BodyMain)


state 129

   64 functionName: tID tLPAR @9 argsName tRPAR .

    $default  reduce using rule 64 (functionName)


state 130

   78 argListName: argListName tADD . @13 argListName

    $default  reduce using rule 77 (@13)

    @13  go to state 156


state 131

   72 argListName: argListName tDIV . @10 argListName

    $default  reduce using rule 71 (@10)

    @10  go to state 157


state 132

   74 argListName: argListName tMUL . @11 argListName

    $default  reduce using rule 73 (@11)

    @11  go to state 158


state 133

   70 argListName: argListName tCOMMA . argListName

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    functionName  go to state 98
    argListName   go to state 159


state 134

   76 argListName: argListName @12 . tSUB argListName

    tSUB  shift, and go to state 160


state 135

   54 declaration3: tASSIGN resultat tSEMI .

    $default  reduce using rule 54 (declaration3)


state 136

   53 declaration3: tASSIGN var tSEMI .

    $default  reduce using rule 53 (declaration3)


state 137

   51 condition: tLPAR condition tRPAR .

    $default  reduce using rule 51 (condition)


state 138

   33 if: tIF tLPAR condition tRPAR @7 . ifStructure

    tLBRACE  shift, and go to state 161

    ifStructure  go to state 162


state 139

   49 condition: var tLT condition .

    $default  reduce using rule 49 (condition)


state 140

   48 condition: var tGT condition .

    $default  reduce using rule 48 (condition)


state 141

   47 condition: var tNE condition .

    $default  reduce using rule 47 (condition)


state 142

   46 condition: var tEQ condition .

    $default  reduce using rule 46 (condition)


state 143

   45 condition: var tGE condition .

    $default  reduce using rule 45 (condition)


state 144

   44 condition: var tLE condition .

    $default  reduce using rule 44 (condition)


state 145

   42 condition: var tAND condition .

    $default  reduce using rule 42 (condition)


state 146

   50 condition: var tOR condition .

    $default  reduce using rule 50 (condition)


state 147

   43 condition: var tNOT condition .

    $default  reduce using rule 43 (condition)


state 148

   31 while: tWHILE tLPAR condition tRPAR tLBRACE . structure tRBRACE

    tID     shift, and go to state 35
    tINT    shift, and go to state 36
    tIF     shift, and go to state 37
    tWHILE  shift, and go to state 38
    tPRINT  shift, and go to state 39

    structure     go to state 163
    context       go to state 41
    action        go to state 42
    print         go to state 43
    bucles        go to state 44
    while         go to state 45
    if            go to state 46
    declaration1  go to state 47
    declaration   go to state 48
    functionName  go to state 49


state 149

   27 print: tPRINT tLPAR tSTRING tID tSTRING . tRPAR

    tRPAR  shift, and go to state 164


state 150

   87 resultat: resultat tSUB @17 . var

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    var           go to state 165


state 151

   83 resultat: resultat tDIV @15 . var

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    var           go to state 166


state 152

   81 resultat: resultat @14 tMUL . var

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    var           go to state 167


state 153

   85 resultat: resultat @16 tADD . var

    tID  shift, and go to state 78
    tNB  shift, and go to state 79

    functionName  go to state 83
    var           go to state 168


state 154

   57 declaration: declaration1 tASSIGN resultat tCOMMA declaration . tSEMI

    tSEMI  shift, and go to state 169


state 155

   19 returnStatement: tRETURN @6 resultat tSEMI .

    $default  reduce using rule 19 (returnStatement)


state 156

   78 argListName: argListName tADD @13 . argListName

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    functionName  go to state 98
    argListName   go to state 170


state 157

   72 argListName: argListName tDIV @10 . argListName

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    functionName  go to state 98
    argListName   go to state 171


state 158

   74 argListName: argListName tMUL @11 . argListName

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    functionName  go to state 98
    argListName   go to state 172


state 159

   70 argListName: argListName . tCOMMA argListName
   70            | argListName tCOMMA argListName .
   72            | argListName . tDIV @10 argListName
   74            | argListName . tMUL @11 argListName
   76            | argListName . @12 tSUB argListName
   78            | argListName . tADD @13 argListName

    tADD    shift, and go to state 130
    tDIV    shift, and go to state 131
    tMUL    shift, and go to state 132
    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 70 (argListName)
    tSUB      [reduce using rule 75 (@12)]
    tADD      [reduce using rule 70 (argListName)]
    tDIV      [reduce using rule 70 (argListName)]
    tMUL      [reduce using rule 70 (argListName)]
    tCOMMA    [reduce using rule 70 (argListName)]
    $default  reduce using rule 70 (argListName)

    @12  go to state 134


state 160

   76 argListName: argListName @12 tSUB . argListName

    tID  shift, and go to state 96
    tNB  shift, and go to state 97

    functionName  go to state 98
    argListName   go to state 173


state 161

   34 ifStructure: tLBRACE . structure tRBRACE
   35            | tLBRACE . structure tRBRACE tELSE tLBRACE structure tRBRACE
   36            | tLBRACE . structure tRBRACE functionBodyReturn
   37            | tLBRACE . structure tRBRACE tELSE tLBRACE functionBodyReturn tRBRACE
   38            | tLBRACE . structure returnStatement tRBRACE
   39            | tLBRACE . returnStatement tRBRACE

    tID      shift, and go to state 35
    tINT     shift, and go to state 36
    tIF      shift, and go to state 37
    tWHILE   shift, and go to state 38
    tPRINT   shift, and go to state 39
    tRETURN  shift, and go to state 68

    returnStatement  go to state 174
    structure        go to state 175
    context          go to state 41
    action           go to state 42
    print            go to state 43
    bucles           go to state 44
    while            go to state 45
    if               go to state 46
    declaration1     go to state 47
    declaration      go to state 48
    functionName     go to state 49


state 162

   33 if: tIF tLPAR condition tRPAR @7 ifStructure .

    $default  reduce using rule 33 (if)


state 163

   31 while: tWHILE tLPAR condition tRPAR tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 176


state 164

   27 print: tPRINT tLPAR tSTRING tID tSTRING tRPAR .

    $default  reduce using rule 27 (print)


state 165

   87 resultat: resultat tSUB @17 var .

    $default  reduce using rule 87 (resultat)


state 166

   83 resultat: resultat tDIV @15 var .

    $default  reduce using rule 83 (resultat)


state 167

   81 resultat: resultat @14 tMUL var .

    $default  reduce using rule 81 (resultat)


state 168

   85 resultat: resultat @16 tADD var .

    $default  reduce using rule 85 (resultat)


state 169

   57 declaration: declaration1 tASSIGN resultat tCOMMA declaration tSEMI .

    $default  reduce using rule 57 (declaration)


state 170

   70 argListName: argListName . tCOMMA argListName
   72            | argListName . tDIV @10 argListName
   74            | argListName . tMUL @11 argListName
   76            | argListName . @12 tSUB argListName
   78            | argListName . tADD @13 argListName
   78            | argListName tADD @13 argListName .

    tDIV    shift, and go to state 131
    tMUL    shift, and go to state 132
    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 75 (@12)
    tSUB      [reduce using rule 78 (argListName)]
    tCOMMA    [reduce using rule 78 (argListName)]
    $default  reduce using rule 78 (argListName)

    @12  go to state 134


state 171

   70 argListName: argListName . tCOMMA argListName
   72            | argListName . tDIV @10 argListName
   72            | argListName tDIV @10 argListName .
   74            | argListName . tMUL @11 argListName
   76            | argListName . @12 tSUB argListName
   78            | argListName . tADD @13 argListName

    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 72 (argListName)
    tSUB      [reduce using rule 75 (@12)]
    tCOMMA    [reduce using rule 72 (argListName)]
    $default  reduce using rule 72 (argListName)

    @12  go to state 134


state 172

   70 argListName: argListName . tCOMMA argListName
   72            | argListName . tDIV @10 argListName
   74            | argListName . tMUL @11 argListName
   74            | argListName tMUL @11 argListName .
   76            | argListName . @12 tSUB argListName
   78            | argListName . tADD @13 argListName

    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 74 (argListName)
    tSUB      [reduce using rule 75 (@12)]
    tCOMMA    [reduce using rule 74 (argListName)]
    $default  reduce using rule 74 (argListName)

    @12  go to state 134


state 173

   70 argListName: argListName . tCOMMA argListName
   72            | argListName . tDIV @10 argListName
   74            | argListName . tMUL @11 argListName
   76            | argListName . @12 tSUB argListName
   76            | argListName @12 tSUB argListName .
   78            | argListName . tADD @13 argListName

    tDIV    shift, and go to state 131
    tMUL    shift, and go to state 132
    tCOMMA  shift, and go to state 133

    tSUB      reduce using rule 75 (@12)
    tSUB      [reduce using rule 76 (argListName)]
    tCOMMA    [reduce using rule 76 (argListName)]
    $default  reduce using rule 76 (argListName)

    @12  go to state 134


state 174

   39 ifStructure: tLBRACE returnStatement . tRBRACE

    tRBRACE  shift, and go to state 177


state 175

   34 ifStructure: tLBRACE structure . tRBRACE
   35            | tLBRACE structure . tRBRACE tELSE tLBRACE structure tRBRACE
   36            | tLBRACE structure . tRBRACE functionBodyReturn
   37            | tLBRACE structure . tRBRACE tELSE tLBRACE functionBodyReturn tRBRACE
   38            | tLBRACE structure . returnStatement tRBRACE

    tRBRACE  shift, and go to state 178
    tRETURN  shift, and go to state 68

    returnStatement  go to state 179


state 176

   31 while: tWHILE tLPAR condition tRPAR tLBRACE structure tRBRACE .

    $default  reduce using rule 31 (while)


state 177

   39 ifStructure: tLBRACE returnStatement tRBRACE .

    $default  reduce using rule 39 (ifStructure)


state 178

   34 ifStructure: tLBRACE structure tRBRACE .
   35            | tLBRACE structure tRBRACE . tELSE tLBRACE structure tRBRACE
   36            | tLBRACE structure tRBRACE . functionBodyReturn
   37            | tLBRACE structure tRBRACE . tELSE tLBRACE functionBodyReturn tRBRACE

    tELSE    shift, and go to state 180
    tLBRACE  shift, and go to state 51

    $default  reduce using rule 34 (ifStructure)

    functionBodyReturn  go to state 181


state 179

   38 ifStructure: tLBRACE structure returnStatement . tRBRACE

    tRBRACE  shift, and go to state 182


state 180

   35 ifStructure: tLBRACE structure tRBRACE tELSE . tLBRACE structure tRBRACE
   37            | tLBRACE structure tRBRACE tELSE . tLBRACE functionBodyReturn tRBRACE

    tLBRACE  shift, and go to state 183


state 181

   36 ifStructure: tLBRACE structure tRBRACE functionBodyReturn .

    $default  reduce using rule 36 (ifStructure)


state 182

   38 ifStructure: tLBRACE structure returnStatement tRBRACE .

    $default  reduce using rule 38 (ifStructure)


state 183

   35 ifStructure: tLBRACE structure tRBRACE tELSE tLBRACE . structure tRBRACE
   37            | tLBRACE structure tRBRACE tELSE tLBRACE . functionBodyReturn tRBRACE

    tID      shift, and go to state 35
    tINT     shift, and go to state 36
    tIF      shift, and go to state 37
    tWHILE   shift, and go to state 38
    tLBRACE  shift, and go to state 51
    tPRINT   shift, and go to state 39

    functionBodyReturn  go to state 184
    structure           go to state 185
    context             go to state 41
    action              go to state 42
    print               go to state 43
    bucles              go to state 44
    while               go to state 45
    if                  go to state 46
    declaration1        go to state 47
    declaration         go to state 48
    functionName        go to state 49


state 184

   37 ifStructure: tLBRACE structure tRBRACE tELSE tLBRACE functionBodyReturn . tRBRACE

    tRBRACE  shift, and go to state 186


state 185

   35 ifStructure: tLBRACE structure tRBRACE tELSE tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 187


state 186

   37 ifStructure: tLBRACE structure tRBRACE tELSE tLBRACE functionBodyReturn tRBRACE .

    $default  reduce using rule 37 (ifStructure)


state 187

   35 ifStructure: tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE .

    $default  reduce using rule 35 (ifStructure)
