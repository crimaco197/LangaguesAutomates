Terminals which are not used

   tTEXT
   tCDIV
   tSPAN
   tCSPAN
   tERROR


Grammar

    0 $accept: Program $end

    1 Program: fun
    2        | fun Program

    3 fun: tVOID tID tLPAR args tRPAR tLBRACE structure tRBRACE
    4    | tINT tID tLPAR args tRPAR tLBRACE structure return tRBRACE

    5 structure: context
    6          | context structure

    7 context: action

    8 action: declaration tSEMI
    9       | print tSEMI
   10       | bucles

   11 return: tRETURN var tSEMI

   12 print: tPRINT tLPAR tID tRPAR

   13 bucles: if
   14       | while

   15 while: tWHILE tLPAR condition tRPAR tLBRACE structure tRBRACE

   16 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE
   17   | tIF tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE

   18 condition: var
   19          | tNOT tID
   20          | var tAND condition
   21          | var tNOT condition
   22          | var tLE condition
   23          | var tGE condition
   24          | var tEQ condition
   25          | var tNE condition
   26          | var tGT condition
   27          | var tLT condition
   28          | var tOR condition
   29          | tLPAR condition tRPAR

   30 declaration: tINT tID
   31            | tINT tID tCOMMA declaration
   32            | tINT tID tASSIGN resultat tCOMMA declaration
   33            | tINT tID tASSIGN resultat
   34            | tINT tID tASSIGN functionName
   35            | tID tASSIGN resultat
   36            | tID tCOMMA declaration
   37            | tID

   38 functionName: tID tLPAR argsName tRPAR

   39 argsName: /* empty */
   40         | argListName

   41 argListName: var
   42            | argListName tCOMMA resultat

   43 resultat: var
   44         | resultat tMUL var
   45         | resultat tDIV var
   46         | resultat tADD var
   47         | resultat tSUB var

   48 var: tID
   49    | tNB

   50 args: /* empty */
   51     | argList

   52 argList: tVOID
   53        | tINT tID
   54        | argList tCOMMA tINT tID


Terminals, with rules where they appear

$end (0) 0
error (256)
tTEXT (258)
tID (259) 3 4 12 19 30 31 32 33 34 35 36 37 38 48 53 54
tNB (260) 49
tVOID (261) 3 52
tINT (262) 4 30 31 32 33 34 53 54
tCDIV (263)
tSPAN (264)
tCSPAN (265)
tIF (266) 16 17
tELSE (267) 17
tWHILE (268) 15
tADD (269) 46
tSUB (270) 47
tMUL (271) 44
tDIV (272) 45
tLT (273) 27
tGT (274) 26
tNE (275) 25
tEQ (276) 24
tGE (277) 23
tLE (278) 22
tASSIGN (279) 32 33 34 35
tAND (280) 20
tOR (281) 28
tNOT (282) 19 21
tLBRACE (283) 3 4 15 16 17
tRBRACE (284) 3 4 15 16 17
tLPAR (285) 3 4 12 15 16 17 29 38
tRPAR (286) 3 4 12 15 16 17 29 38
tSEMI (287) 8 9 11
tCOMMA (288) 31 32 36 42 54
tERROR (289)
tPRINT (290) 12
tRETURN (291) 11


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Program (38)
    on left: 1 2, on right: 0 2
fun (39)
    on left: 3 4, on right: 1 2
structure (40)
    on left: 5 6, on right: 3 4 6 15 16 17
context (41)
    on left: 7, on right: 5 6
action (42)
    on left: 8 9 10, on right: 7
return (43)
    on left: 11, on right: 4
print (44)
    on left: 12, on right: 9
bucles (45)
    on left: 13 14, on right: 10
while (46)
    on left: 15, on right: 14
if (47)
    on left: 16 17, on right: 13
condition (48)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29, on right: 15 16 17
    20 21 22 23 24 25 26 27 28 29
declaration (49)
    on left: 30 31 32 33 34 35 36 37, on right: 8 31 32 36
functionName (50)
    on left: 38, on right: 34
argsName (51)
    on left: 39 40, on right: 38
argListName (52)
    on left: 41 42, on right: 40 42
resultat (53)
    on left: 43 44 45 46 47, on right: 32 33 35 42 44 45 46 47
var (54)
    on left: 48 49, on right: 11 18 20 21 22 23 24 25 26 27 28 41 43
    44 45 46 47
args (55)
    on left: 50 51, on right: 3 4
argList (56)
    on left: 52 53 54, on right: 51 54


state 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    Program  go to state 3
    fun      go to state 4


state 1

    3 fun: tVOID . tID tLPAR args tRPAR tLBRACE structure tRBRACE

    tID  shift, and go to state 5


state 2

    4 fun: tINT . tID tLPAR args tRPAR tLBRACE structure return tRBRACE

    tID  shift, and go to state 6


state 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


state 4

    1 Program: fun .
    2        | fun . Program

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    $default  reduce using rule 1 (Program)

    Program  go to state 8
    fun      go to state 4


state 5

    3 fun: tVOID tID . tLPAR args tRPAR tLBRACE structure tRBRACE

    tLPAR  shift, and go to state 9


state 6

    4 fun: tINT tID . tLPAR args tRPAR tLBRACE structure return tRBRACE

    tLPAR  shift, and go to state 10


state 7

    0 $accept: Program $end .

    $default  accept


state 8

    2 Program: fun Program .

    $default  reduce using rule 2 (Program)


state 9

    3 fun: tVOID tID tLPAR . args tRPAR tLBRACE structure tRBRACE

    tVOID  shift, and go to state 11
    tINT   shift, and go to state 12

    $default  reduce using rule 50 (args)

    args     go to state 13
    argList  go to state 14


state 10

    4 fun: tINT tID tLPAR . args tRPAR tLBRACE structure return tRBRACE

    tVOID  shift, and go to state 11
    tINT   shift, and go to state 12

    $default  reduce using rule 50 (args)

    args     go to state 15
    argList  go to state 14


state 11

   52 argList: tVOID .

    $default  reduce using rule 52 (argList)


state 12

   53 argList: tINT . tID

    tID  shift, and go to state 16


state 13

    3 fun: tVOID tID tLPAR args . tRPAR tLBRACE structure tRBRACE

    tRPAR  shift, and go to state 17


state 14

   51 args: argList .
   54 argList: argList . tCOMMA tINT tID

    tCOMMA  shift, and go to state 18

    $default  reduce using rule 51 (args)


state 15

    4 fun: tINT tID tLPAR args . tRPAR tLBRACE structure return tRBRACE

    tRPAR  shift, and go to state 19


state 16

   53 argList: tINT tID .

    $default  reduce using rule 53 (argList)


state 17

    3 fun: tVOID tID tLPAR args tRPAR . tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 20


state 18

   54 argList: argList tCOMMA . tINT tID

    tINT  shift, and go to state 21


state 19

    4 fun: tINT tID tLPAR args tRPAR . tLBRACE structure return tRBRACE

    tLBRACE  shift, and go to state 22


state 20

    3 fun: tVOID tID tLPAR args tRPAR tLBRACE . structure tRBRACE

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    structure    go to state 28
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 21

   54 argList: argList tCOMMA tINT . tID

    tID  shift, and go to state 36


state 22

    4 fun: tINT tID tLPAR args tRPAR tLBRACE . structure return tRBRACE

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    structure    go to state 37
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 23

   35 declaration: tID . tASSIGN resultat
   36            | tID . tCOMMA declaration
   37            | tID .

    tASSIGN  shift, and go to state 38
    tCOMMA   shift, and go to state 39

    $default  reduce using rule 37 (declaration)


state 24

   30 declaration: tINT . tID
   31            | tINT . tID tCOMMA declaration
   32            | tINT . tID tASSIGN resultat tCOMMA declaration
   33            | tINT . tID tASSIGN resultat
   34            | tINT . tID tASSIGN functionName

    tID  shift, and go to state 40


state 25

   16 if: tIF . tLPAR condition tRPAR tLBRACE structure tRBRACE
   17   | tIF . tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE

    tLPAR  shift, and go to state 41


state 26

   15 while: tWHILE . tLPAR condition tRPAR tLBRACE structure tRBRACE

    tLPAR  shift, and go to state 42


state 27

   12 print: tPRINT . tLPAR tID tRPAR

    tLPAR  shift, and go to state 43


state 28

    3 fun: tVOID tID tLPAR args tRPAR tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 44


state 29

    5 structure: context .
    6          | context . structure

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    $default  reduce using rule 5 (structure)

    structure    go to state 45
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 30

    7 context: action .

    $default  reduce using rule 7 (context)


state 31

    9 action: print . tSEMI

    tSEMI  shift, and go to state 46


state 32

   10 action: bucles .

    $default  reduce using rule 10 (action)


state 33

   14 bucles: while .

    $default  reduce using rule 14 (bucles)


state 34

   13 bucles: if .

    $default  reduce using rule 13 (bucles)


state 35

    8 action: declaration . tSEMI

    tSEMI  shift, and go to state 47


state 36

   54 argList: argList tCOMMA tINT tID .

    $default  reduce using rule 54 (argList)


state 37

    4 fun: tINT tID tLPAR args tRPAR tLBRACE structure . return tRBRACE

    tRETURN  shift, and go to state 48

    return  go to state 49


state 38

   35 declaration: tID tASSIGN . resultat

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    resultat  go to state 52
    var       go to state 53


state 39

   36 declaration: tID tCOMMA . declaration

    tID   shift, and go to state 23
    tINT  shift, and go to state 24

    declaration  go to state 54


state 40

   30 declaration: tINT tID .
   31            | tINT tID . tCOMMA declaration
   32            | tINT tID . tASSIGN resultat tCOMMA declaration
   33            | tINT tID . tASSIGN resultat
   34            | tINT tID . tASSIGN functionName

    tASSIGN  shift, and go to state 55
    tCOMMA   shift, and go to state 56

    $default  reduce using rule 30 (declaration)


state 41

   16 if: tIF tLPAR . condition tRPAR tLBRACE structure tRBRACE
   17   | tIF tLPAR . condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 59
    var        go to state 60


state 42

   15 while: tWHILE tLPAR . condition tRPAR tLBRACE structure tRBRACE

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 61
    var        go to state 60


state 43

   12 print: tPRINT tLPAR . tID tRPAR

    tID  shift, and go to state 62


state 44

    3 fun: tVOID tID tLPAR args tRPAR tLBRACE structure tRBRACE .

    $default  reduce using rule 3 (fun)


state 45

    6 structure: context structure .

    $default  reduce using rule 6 (structure)


state 46

    9 action: print tSEMI .

    $default  reduce using rule 9 (action)


state 47

    8 action: declaration tSEMI .

    $default  reduce using rule 8 (action)


state 48

   11 return: tRETURN . var tSEMI

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    var  go to state 63


state 49

    4 fun: tINT tID tLPAR args tRPAR tLBRACE structure return . tRBRACE

    tRBRACE  shift, and go to state 64


state 50

   48 var: tID .

    $default  reduce using rule 48 (var)


state 51

   49 var: tNB .

    $default  reduce using rule 49 (var)


state 52

   35 declaration: tID tASSIGN resultat .
   44 resultat: resultat . tMUL var
   45         | resultat . tDIV var
   46         | resultat . tADD var
   47         | resultat . tSUB var

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tMUL  shift, and go to state 67
    tDIV  shift, and go to state 68

    $default  reduce using rule 35 (declaration)


state 53

   43 resultat: var .

    $default  reduce using rule 43 (resultat)


state 54

   36 declaration: tID tCOMMA declaration .

    $default  reduce using rule 36 (declaration)


state 55

   32 declaration: tINT tID tASSIGN . resultat tCOMMA declaration
   33            | tINT tID tASSIGN . resultat
   34            | tINT tID tASSIGN . functionName

    tID  shift, and go to state 69
    tNB  shift, and go to state 51

    functionName  go to state 70
    resultat      go to state 71
    var           go to state 53


state 56

   31 declaration: tINT tID tCOMMA . declaration

    tID   shift, and go to state 23
    tINT  shift, and go to state 24

    declaration  go to state 72


state 57

   19 condition: tNOT . tID

    tID  shift, and go to state 73


state 58

   29 condition: tLPAR . condition tRPAR

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 74
    var        go to state 60


state 59

   16 if: tIF tLPAR condition . tRPAR tLBRACE structure tRBRACE
   17   | tIF tLPAR condition . tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE

    tRPAR  shift, and go to state 75


state 60

   18 condition: var .
   20          | var . tAND condition
   21          | var . tNOT condition
   22          | var . tLE condition
   23          | var . tGE condition
   24          | var . tEQ condition
   25          | var . tNE condition
   26          | var . tGT condition
   27          | var . tLT condition
   28          | var . tOR condition

    tLT   shift, and go to state 76
    tGT   shift, and go to state 77
    tNE   shift, and go to state 78
    tEQ   shift, and go to state 79
    tGE   shift, and go to state 80
    tLE   shift, and go to state 81
    tAND  shift, and go to state 82
    tOR   shift, and go to state 83
    tNOT  shift, and go to state 84

    $default  reduce using rule 18 (condition)


state 61

   15 while: tWHILE tLPAR condition . tRPAR tLBRACE structure tRBRACE

    tRPAR  shift, and go to state 85


state 62

   12 print: tPRINT tLPAR tID . tRPAR

    tRPAR  shift, and go to state 86


state 63

   11 return: tRETURN var . tSEMI

    tSEMI  shift, and go to state 87


state 64

    4 fun: tINT tID tLPAR args tRPAR tLBRACE structure return tRBRACE .

    $default  reduce using rule 4 (fun)


state 65

   46 resultat: resultat tADD . var

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    var  go to state 88


state 66

   47 resultat: resultat tSUB . var

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    var  go to state 89


state 67

   44 resultat: resultat tMUL . var

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    var  go to state 90


state 68

   45 resultat: resultat tDIV . var

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    var  go to state 91


state 69

   38 functionName: tID . tLPAR argsName tRPAR
   48 var: tID .

    tLPAR  shift, and go to state 92

    $default  reduce using rule 48 (var)


state 70

   34 declaration: tINT tID tASSIGN functionName .

    $default  reduce using rule 34 (declaration)


state 71

   32 declaration: tINT tID tASSIGN resultat . tCOMMA declaration
   33            | tINT tID tASSIGN resultat .
   44 resultat: resultat . tMUL var
   45         | resultat . tDIV var
   46         | resultat . tADD var
   47         | resultat . tSUB var

    tADD    shift, and go to state 65
    tSUB    shift, and go to state 66
    tMUL    shift, and go to state 67
    tDIV    shift, and go to state 68
    tCOMMA  shift, and go to state 93

    $default  reduce using rule 33 (declaration)


state 72

   31 declaration: tINT tID tCOMMA declaration .

    $default  reduce using rule 31 (declaration)


state 73

   19 condition: tNOT tID .

    $default  reduce using rule 19 (condition)


state 74

   29 condition: tLPAR condition . tRPAR

    tRPAR  shift, and go to state 94


state 75

   16 if: tIF tLPAR condition tRPAR . tLBRACE structure tRBRACE
   17   | tIF tLPAR condition tRPAR . tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 95


state 76

   27 condition: var tLT . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 96
    var        go to state 60


state 77

   26 condition: var tGT . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 97
    var        go to state 60


state 78

   25 condition: var tNE . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 98
    var        go to state 60


state 79

   24 condition: var tEQ . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 99
    var        go to state 60


state 80

   23 condition: var tGE . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 100
    var        go to state 60


state 81

   22 condition: var tLE . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 101
    var        go to state 60


state 82

   20 condition: var tAND . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 102
    var        go to state 60


state 83

   28 condition: var tOR . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 103
    var        go to state 60


state 84

   21 condition: var tNOT . condition

    tID    shift, and go to state 50
    tNB    shift, and go to state 51
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 58

    condition  go to state 104
    var        go to state 60


state 85

   15 while: tWHILE tLPAR condition tRPAR . tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 105


state 86

   12 print: tPRINT tLPAR tID tRPAR .

    $default  reduce using rule 12 (print)


state 87

   11 return: tRETURN var tSEMI .

    $default  reduce using rule 11 (return)


state 88

   46 resultat: resultat tADD var .

    $default  reduce using rule 46 (resultat)


state 89

   47 resultat: resultat tSUB var .

    $default  reduce using rule 47 (resultat)


state 90

   44 resultat: resultat tMUL var .

    $default  reduce using rule 44 (resultat)


state 91

   45 resultat: resultat tDIV var .

    $default  reduce using rule 45 (resultat)


state 92

   38 functionName: tID tLPAR . argsName tRPAR

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    $default  reduce using rule 39 (argsName)

    argsName     go to state 106
    argListName  go to state 107
    var          go to state 108


state 93

   32 declaration: tINT tID tASSIGN resultat tCOMMA . declaration

    tID   shift, and go to state 23
    tINT  shift, and go to state 24

    declaration  go to state 109


state 94

   29 condition: tLPAR condition tRPAR .

    $default  reduce using rule 29 (condition)


state 95

   16 if: tIF tLPAR condition tRPAR tLBRACE . structure tRBRACE
   17   | tIF tLPAR condition tRPAR tLBRACE . structure tRBRACE tELSE tLBRACE structure tRBRACE

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    structure    go to state 110
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 96

   27 condition: var tLT condition .

    $default  reduce using rule 27 (condition)


state 97

   26 condition: var tGT condition .

    $default  reduce using rule 26 (condition)


state 98

   25 condition: var tNE condition .

    $default  reduce using rule 25 (condition)


state 99

   24 condition: var tEQ condition .

    $default  reduce using rule 24 (condition)


state 100

   23 condition: var tGE condition .

    $default  reduce using rule 23 (condition)


state 101

   22 condition: var tLE condition .

    $default  reduce using rule 22 (condition)


state 102

   20 condition: var tAND condition .

    $default  reduce using rule 20 (condition)


state 103

   28 condition: var tOR condition .

    $default  reduce using rule 28 (condition)


state 104

   21 condition: var tNOT condition .

    $default  reduce using rule 21 (condition)


state 105

   15 while: tWHILE tLPAR condition tRPAR tLBRACE . structure tRBRACE

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    structure    go to state 111
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 106

   38 functionName: tID tLPAR argsName . tRPAR

    tRPAR  shift, and go to state 112


state 107

   40 argsName: argListName .
   42 argListName: argListName . tCOMMA resultat

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 40 (argsName)


state 108

   41 argListName: var .

    $default  reduce using rule 41 (argListName)


state 109

   32 declaration: tINT tID tASSIGN resultat tCOMMA declaration .

    $default  reduce using rule 32 (declaration)


state 110

   16 if: tIF tLPAR condition tRPAR tLBRACE structure . tRBRACE
   17   | tIF tLPAR condition tRPAR tLBRACE structure . tRBRACE tELSE tLBRACE structure tRBRACE

    tRBRACE  shift, and go to state 114


state 111

   15 while: tWHILE tLPAR condition tRPAR tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 115


state 112

   38 functionName: tID tLPAR argsName tRPAR .

    $default  reduce using rule 38 (functionName)


state 113

   42 argListName: argListName tCOMMA . resultat

    tID  shift, and go to state 50
    tNB  shift, and go to state 51

    resultat  go to state 116
    var       go to state 53


state 114

   16 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE .
   17   | tIF tLPAR condition tRPAR tLBRACE structure tRBRACE . tELSE tLBRACE structure tRBRACE

    tELSE  shift, and go to state 117

    $default  reduce using rule 16 (if)


state 115

   15 while: tWHILE tLPAR condition tRPAR tLBRACE structure tRBRACE .

    $default  reduce using rule 15 (while)


state 116

   42 argListName: argListName tCOMMA resultat .
   44 resultat: resultat . tMUL var
   45         | resultat . tDIV var
   46         | resultat . tADD var
   47         | resultat . tSUB var

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tMUL  shift, and go to state 67
    tDIV  shift, and go to state 68

    $default  reduce using rule 42 (argListName)


state 117

   17 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE . tLBRACE structure tRBRACE

    tLBRACE  shift, and go to state 118


state 118

   17 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE . structure tRBRACE

    tID     shift, and go to state 23
    tINT    shift, and go to state 24
    tIF     shift, and go to state 25
    tWHILE  shift, and go to state 26
    tPRINT  shift, and go to state 27

    structure    go to state 119
    context      go to state 29
    action       go to state 30
    print        go to state 31
    bucles       go to state 32
    while        go to state 33
    if           go to state 34
    declaration  go to state 35


state 119

   17 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure . tRBRACE

    tRBRACE  shift, and go to state 120


state 120

   17 if: tIF tLPAR condition tRPAR tLBRACE structure tRBRACE tELSE tLBRACE structure tRBRACE .

    $default  reduce using rule 17 (if)
