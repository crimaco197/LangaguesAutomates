Program : fun
        | fun Program
;

fun : 
   tVOID tID tLPAR args tRPAR tLBRACE structure tRBRACE 

   |tINT tVOID tID tLPAR args tRPAR tLBRACE structure  return tRBRACE 
;
fsdfs
args: tVOID
    |arg
    | args tCOMMA args
;

arg : tINT tID  
;

return  : tRETURN  resultat tSEMI
;

structure : context 
          | context structure     
;

context : action 
        |condsi
        |condwhile 
;

action : assignation tSEMI 
       | affichage tSEMI
       | declaration tSEMI
;



condwhile : tWHILE tLPAR condition tRPAR tLBRACE structure tRBRACE
;

condsi : si 
       | sinon
;

si :  tIF tLPAR condition tRPAR tLBRACE structure tRBRACE 
;

sinon : tELSE  tLBRACE structure tRBRACE
;

condition :tNB
          |  condition tAND condition 
          |  condition tNOT condition
          |  condition tLE condition
          |  condition tGE condition
          |  condition tEQ condition
          |  condition tNE condition
          |  condition tGT condition
          |  condition tLT condition
          |  condition tOR condition 
          |  tID
          |  tNOT tID
          |tLPAR condition tRPAR
;

declaration : tINT valeur 
            | tINT valeur tASSIGN resultat 
;

valeur : tID
       | valeur tCOMMA tID 
;

assignation : tID tASSIGN resultat 
;

affichage : tPRINT tLPAR tID tRPAR
;

resultat  : tNB
          | tID
          | resultat tMUL resultat
          | resultat tDIV resultat
          | resultat tADD resultat
          | resultat tSUB resultat
          | fonctioname
;

fonctioname : tID tLPAR argvs tRPAR 
;

argvs :
      |argv 
      |argvs tCOMMA argv
;

argv : resultat 
;



int compute(int a, int d) {
    int b, c = a + d * 5;
    b = a;
    while (c > 0) {
      b = b + a * 4;
    }
    return b;
}

void main(void) {
  int a;
  if (a == 3) {
    print(a);
  } else {
    int b = compute(a, 2 * a);
    print(b);
  }
}